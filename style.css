* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: -apple-system,
        system-ui, BlinkMacSystemFont, "Segoe UI"
        , Roboto, "Helvetica Neue"
        , "Fira Sans"
        , Ubuntu, Oxygen, "Oxygen Sans"
        , Cantarell, "Droid Sans"
        , "Apple Color Emoji"
        , "Segoe UI Emoji"
        , "Segoe UI Emoji"
        , "Segoe UI Symbol"
        , "Lucida Grande"
        , Helvetica, Arial, sans-serif;

}

html {
    font-size: 62.5%;  
    /* default font-size of html tag is 16px 
    16 * 62.5%(0.625) = 10px 
    means now 1rem = 10px 
    This value is commonly used to make rem-based font sizing calculations easier.
    Normally, 1rem is equal to 16px (the default font size in most browsers). But if you set font-size: 62.5%, then 1rem becomes 10px. */

}

body {
    background-color: #F4F2EE;
    overflow-x: hidden; 
    display: flex;
    justify-content: center;
}

nav {

    height: 6rem;
    /* What does 6rem mean?

    6rem means that the height of the navigation bar is equal to 6 times the root font size.
    Since, in your code, the root font size is set to 10px (from font-size: 62.5%), 1rem = 10px, so:
    6rem = 6 Ã— 10px = 60px. 
    Responsiveness: It's easier to control and adjust layouts across different screen sizes, since using rem makes the measurements flexible.height: 6rem;  /* height = 6 * 10px = 60px */
     /*font-size: 2rem;  font size = 2 * 10px = 20px */
    margin-bottom: 2.1rem;
    display: flex;
    position: fixed;
    padding: 0px 5%; 
    /* Adds padding to the left and right of the navigation bar (5% of the viewport width). */
    border-bottom: 1px solid rgba(128, 128, 128, 0.205); 
    /*  Adds a subtle bottom border with slight opacity. */
    background-color: #FFFFFF;


}


/* (left section of the navigation bar)  */
.nav-left {

    width: 30%;
    height: 100%;
    display: flex;
    align-items: center;
    gap: 1rem;
    justify-content: start;
}


/* (logo or image in the left section) */
.nav-left>img {
    width: 3.2rem;
    border-radius: .2rem;
}


/* (search bar container)  */
.nav-left>.input-div {
    border: none;
    height: 3rem;
    border-radius: .2rem;
    width: 50rem;
    position: relative; 
    /* Positions child elements relative to this container. */
}


/*  (search bar input) */
.input-div>input {
    border: none;
    height: 100%;
    border-radius: .2rem;
    width: 100%;
    padding-left: 3rem;
    /* padding-left: 3rem;: Adds padding to the left to make room for the search icon. */
    background-color: #EDF3F8;
}

/* (search icon) */
.input-div>i {
    position: absolute;
    font-size: 1.5rem;
    top: 25%; /* Vertically positions the icon in the middle.
    left: 2%;: Positions the icon towards the left. */
    left: 2%;
}


/* (middle section of the navigation bar)  */
.nav-center {
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    gap: 3rem;
    justify-content: end; /* Aligns the items to the end (right side) of the section. */
    padding-right: 2rem;
    border-right: 1px solid rgba(128, 128, 128, 0.205);
}

/* (individual navigation items) */
.nav-box {
    font-size: 1.4rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    color: gray;

}

/* (icon inside the nav-box) */
.nav-box>i {
    font-size: 2rem;
    color: gray;

}

.nav-box:hover,
.nav-box:hover>i {
    color: black;
}

/*  (image inside the nav-box) */
.nav-box>img {
    width: 3rem;
    border-radius: 50%; /*  Makes the image circular by applying a 50% border radius. */
}

/* (right section of the navigation bar)  */
.nav-right {
    display: flex;
    align-items: center;
    justify-content: space-around;
    /* What does space-around mean?
     distributes space evenly around the flex items, creating equal space on both sides of each item. */
    width: 20%;
    font-size: 1.4rem;
}

.nav-right-left {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.nav-right-left>i {
    font-size: 2rem;
}


/* (main container for the layout) */
.container {
    width: 120rem;
    /* 120rem means:
    120 x 10px = 1200px.
    This makes the width of the .container 1200px. */
    
    min-height: 58rem;
    /* What does this mean?
    The min-height: 58rem; property ensures that the .container will always have a minimum height of 58 rem units.
    Again, since 1rem is equivalent to 10px (as explained earlier), this will be:
    58 x 10px = 580px.
    This means the container will always be at least 580px tall. */
    
    display: grid;

    grid-template-rows: 15rem 21rem minmax(14rem, 1fr);
    /* This property defines the height of the rows in the grid.
    15rem:
    The first row has a fixed height of 15rem. As we discussed earlier, rem is relative to the root font size, so 15rem means 150px if 1rem = 10px. 21rem:
    The second row has a fixed height of 21rem, which is equivalent to 210px (1rem = 10px).
    minmax(14rem, 1fr):

    This row's height is defined using the minmax function.
    minmax() allows you to set a minimum and maximum height for this row.
    Minimum height: 14rem, which is 140px.
    Maximum height: 1fr, where fr stands for fractional unit. This means that this row can grow to take up remaining available space in the container after the fixed rows have been assigned their heights.
    
    Visual Breakdown of grid-template-rows:
    The first two rows have fixed heights (15rem and 21rem).
    The third row is flexible, meaning it will be at least 14rem tall but can expand if there is extra space in the container.*/
    grid-template-columns: 21% 46% 27%;

    /* This property defines the width of the columns in the grid.

    21%:
    The first column will take up 21% of the container's width.
    46%:
    The second column will take up 46% of the container's width.
    27%:
    The third column will take up 27% of the container's width.
    The percentages add up to 94% (21% + 46% + 27%), which leaves 6% of the container's width as unused space. */

    gap: 1rem 3rem;
    /* Sets the gap between grid items, with 1rem for rows and 3rem for columns. */
    padding-top: 9rem;
}

.box {
    border: 1px solid rgba(128, 128, 128, 0.425);
    font-size: 2rem;
    border-radius: 1rem;
    background-color: #FFFFFF;
}

.box1 {
    grid-row: 1/3;
    /* This rule is specific to CSS Grid Layout. It tells the element where to position itself within the grid in terms of rows.
grid-row: 1/3; means the element will span from the first grid line to the third grid line vertically.
1 refers to the starting row line.
3 refers to the ending row line.
So, the element will stretch across two rows (from the 1st row to the 3rd row) in the grid layout. */
    position: relative; /* Positions the element relative to its normal position in the document flow, and allows the z-index to work.*/
    z-index: -2;
    /* The z-index property controls the stacking order of positioned elements (those with position: relative, absolute, fixed, or sticky).
-2 means that .box1 will be placed behind any other elements with a higher z-index. A z-index of -2 places .box1 below most other elements, which have default or positive z-index values.
Elements with higher z-index values (positive or 0) will stack above this element.
Elements with a lower z-index (negative values like -2) will stack below other elements. */
    overflow: hidden;
    padding: 1rem;

}

.box1-abs {
    width: 100%;
    height: 16%;
    background-color: blue;
    position: absolute;
    z-index: -1;
    top: 0px;
    left: 0px;
}

.box1-name>img {
    width: 7.8rem;
    border-radius: 50%;
    border: 2px solid white;
}

.box1-name {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-size: 1.2rem;
    border-bottom: 1px solid rgba(128, 128, 128, 0.202);
    height: 50%;
    justify-content: center;
    gap: 2rem;
}

.left1 {
    color: rgb(152, 146, 146);
}

.left2 {
    font-weight: 600;
}

.name-in>p {
    color: rgb(152, 146, 146);
}

.name-in {
    text-align: center;
}

.name-in>h2 {
    padding-bottom: .5rem;
}

.box1-Connection {
    display: flex;
    font-size: 1.3rem;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid rgba(128, 128, 128, 0.202);
    padding: 1rem 0px;
}

.box1-Upgrade {
    font-size: 1.3rem;
    padding: 1rem 0px;
    border-bottom: 1px solid rgba(128, 128, 128, 0.202);
}

.box1-top>p {
    color: rgb(152, 146, 146);
}

.box1-bottom {
    display: flex;
    align-items: center;
    gap: .5rem;
    font-weight: 600;
}

.bottom-yellow {

    width: 1.2rem;
    height: 1.2rem;
    background-color: #E7A33E;
}

.box1-items {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 1.3rem;
    padding: 1rem 0px;
}

.box1-items>p {
    font-weight: 600;
}

.box2 {
    padding: 0px 2rem;
}

.box2-top {
    display: flex;
    width: 100%;
    gap: 1rem;
    height: 50%;
    align-items: center;
}

.box2-top>img {
    width: 5.2rem;
    border-radius: 50%;
}

.box2-top>input {
    border-radius: 10rem;
    border: 1px solid gray;
    padding: 0px 1rem;
    font-weight: 600;
    font-size: 1.6rem;
    width: 90%;
    height: 5rem;
}

.box2-bottom {
    display: flex;
    font-size: 1.6rem;
    color: gray;
    align-items: center;
    height: 50%;
    justify-content: space-around;
    font-weight: 600;
}

.box2-left,
.box2-mid,
.box2-right {
    display: flex;
    align-items: center;
    gap: 2rem;
}

.box3 {
    grid-row: 1/3;
    grid-column: 3;
    padding: 1.3rem;
    font-size: 1.7rem;
}

.box3-top {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
}

.box3-top>p {
    font-weight: 600;
}

.box3-top>img {
    width: 1.4rem;
    height: 1.4rem;
}

.box3-account {
    display: flex;
    padding: 1rem 0px;
    gap: 2rem;
}

.box3-account-left>img {
    width: 6rem;
    border-radius: 50%;
}

.box3-account-right {
    font-size: 1.2rem;
    display: flex;
    flex-direction: column;
    gap: .6rem;
}

.box3-account-right>p {
    font-weight: 700;
}

.box3-account-right>span {
    color: gray;
}

.box3-account-right>button {
    background-color: transparent;
    border: 1px solid black;
    width: 9rem;
    height: 3rem;
    border-radius: 10rem;
    font-size: 1.5rem;
    font-weight: 600;
}

.box3-bottom {
    color: gray;
    display: flex;
    align-items: center;
    gap: 1rem;
}

.box4 {
    grid-row: 2/4;
    /* 2 is the starting grid line (the second row line).
4 is the ending grid line (the fourth row line). */
 background-color: #F4F2EE;
    min-height: 10rem;
    border: none;
}


.box5 {
    height: 16rem;
    font-size: 1.3rem;
    padding: 2rem;

}

.box5-top {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid rgba(128, 128, 128, 0.202);
    padding-bottom: 1rem;
}

.box5-right {
    font-size: 2rem;

}

.box5-left {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.box5-left>a {
    text-decoration: none;
    font-weight: 600;
}

.box5-bottom {
    font-size: 1.6rem;
    font-weight: 600;
    color: #7B7B7B;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 30%;

}

.box6 {
    height: 43rem;
    position: sticky;
    top: 9rem;
    overflow: hidden;
    background-color: #F4F2EE;
    border: none;
    font-size: 1.2rem;
}

.box6>img {
    width: 100%;
    border-radius: 3%;
    border: 1px solid rgba(128, 128, 128, 0.205);
}

.box6-bottom {
    width: 100%;
    text-align: center;
    height: 9rem;
    margin: 1rem 0px;
}

.box6-bottom>a {
    color: gray;
    text-decoration: none;
    padding: 1rem .7rem;
    line-height: 2.3rem;
}

.box6-copyright {
    width: 100%;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.post {
    width: 100%;
    min-height: 42rem;
    margin-bottom: 1.2rem;
    border-radius: 1rem;
background-color: white;
    font-size: 1.3rem;
    border: 1px solid rgba(128, 128, 128, 0.425);

}

.post-top {
    display: flex;
    justify-content: space-between;
    padding: 1rem 2rem;
}

.post-left {
    display: flex;
    gap: 1rem;
}

.post-left>img {
    width: 5rem;

}

.post-right>i {
    font-size: 2rem;

}

.post>p {
    padding: 1rem;
    padding-left: 2rem;
    font-size: 1.5rem;

}

.post>img {
    width: 100%;
}
@media (max-width:1229px) {
    html{
        font-size: 50%;
    }
}
@media (max-width:975px) {
    .container{
        width: 90rem;
        /* The width property sets the width of the .container element.
90rem is the value used here, where rem stands for root em, a unit of measurement based on the font size of the root element (<html>). 
Typically, 1rem is equal to 16px by default (but can change if the root font size is modified). but in this we have set the font-size 10px so 90*10 = 900px*/
        grid-template-columns: 30% 60%;
        /* First column: Takes up 30% of the total width of the container.
Second column: Takes up 60% of the total width of the container. */
    }
    .box3,.box6{
        display: none;
    }
    .input-div{
        display: none;
    }
    .nav-left{
        width: 6rem;
    }
    .nav-center{
        width: 55rem;
        justify-content: start;
    }
    .nav-right{
        width: 25rem;
    }
}
@media (max-width:775px) {
    .container{
        grid-template-columns: repeat(1,1fr);
        grid-template-rows: repeat(4,minmax(10rem,1fr));
    }
    .box4{
        grid-row: 5/6;
    }
    .box5{
        grid-row: 3/4;
    }
}
@media (max-width:690px) {
    .nav-center{
        justify-content: space-around;
    }
    .nav-right-left>p{
        display: none;
    }
    .nav-box>p{
        display: none;
    }
}
@media (max-width:500px) {
    .nav-right{
        display: none;
    }
    .nav-center{
        border-right: none;
        width: 100%;
    }
}
@media (max-width:425px) {
    .container{
        padding-top: 6rem;
    }
    .box{
        border-radius: 0px;
    }
    .post{
        border-radius: 0px;
    }
}


/* Responsive Media Queries (adjustments based on screen sizes)
For screens <= 1229px:

font-size: 50%;: Reduces the base font size to 50%.
For screens <= 975px:

Container: Reduces container width and adjusts grid layout to 30%/60% columns.
Elements Hidden: Hides .box3 and .box6.
Navigation Adjustments: Reduces widths and modifies layout.
For screens <= 775px:

Container: Changes the layout to a single column grid.
Box Adjustments: Moves .box4 and .box5 to different rows.
For screens <= 690px:

Navigation Adjustments: Changes layout to space-around for the nav-center and hides some text.
For screens <= 500px:

Hide Nav-Right: Disables the right side of the navigation bar.
Modify Nav-Center: Adjusts width and removes right border.
For screens <= 425px:

Container Padding: Reduces top padding for smaller screens.
Box Borders: Removes border-radius from boxes and posts. */